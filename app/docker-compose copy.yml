version: '3.5'

networks:
  bag-app-net: {}

volumes:   
  bag_app_postgres:
  bag_app_pgadmin:

services:
  config-server:
    tty: true
    container_name: config-server
    networks:
      - bag-app-net
    build:
      context: ./app-api
      #dockerfile: Dockerfile-app-api
      args:
        PATH_FILE: config-server
    ports:
      - "${CONFIG_SERVER_PORT}:${CONFIG_SERVER_PORT}"
    restart: always
    environment:
      - EUREKA_HOST_SERVER=${EUREKA_HOST_SERVER}
      - CONFIG_SERVER_HOST=${CONFIG_SERVER_HOST}
      - API_GATEWAY_PORT=${API_GATEWAY_PORT}
      - EUREKA_SERVER_PORT=${EUREKA_SERVER_PORT}
      - CONFIG_SERVER_PORT=${CONFIG_SERVER_PORT}
      - CONFIG_SERVER_SECURITY_NAME=${CONFIG_SERVER_SECURITY_NAME}
      - CONFIG_SERVER_SECURITY_PASS=${CONFIG_SERVER_SECURITY_PASS}
      - AUTHORIZATION_JWT_SECRET=${AUTHORIZATION_JWT_SECRET}
      - AUTHENTICATION_USER=${AUTHENTICATION_USER}
      - AUTHENTICATION_PASS=${AUTHENTICATION_PASS}
      - PG_HOST_SERVER=${PG_HOST_SERVER}
      - PG_HOST_SERVER_PORT=${PG_HOST_SERVER_PORT}
      - PG_IMAGE_TAG=${PG_IMAGE_TAG}
      - PG_USER=${PG_USER}
      - PG_PASS=${PG_PASS}
      - PG_DB_NAME=${PG_DB_NAME}
      - PG_USER_ADMIN=${PG_USER_ADMIN}
      - PG_PASS_ADMIN=${PG_PASS_ADMIN}
      - SQL_USER_NAME_1=${SQL_USER_NAME_1}
      - SQL_USER_NAME_2=${SQL_USER_NAME_2}
  eureka-server:
    tty: true
    container_name: eureka-server
    networks:
      - bag-app-net
    build:
      context: .
      dockerfile: Dockerfile-app-api
      args:
        PATH_FILE: eureka-server
    ports:
      - "${EUREKA_SERVER_PORT}:${EUREKA_SERVER_PORT}"
    restart: always
    depends_on:
    - config-server
    environment:
      - EUREKA_HOST_SERVER=${EUREKA_HOST_SERVER}
      - CONFIG_SERVER_HOST=${CONFIG_SERVER_HOST}
      - API_GATEWAY_PORT=${API_GATEWAY_PORT}
      - EUREKA_SERVER_PORT=${EUREKA_SERVER_PORT}
      - CONFIG_SERVER_PORT=${CONFIG_SERVER_PORT}
      - CONFIG_SERVER_SECURITY_NAME=${CONFIG_SERVER_SECURITY_NAME}
      - CONFIG_SERVER_SECURITY_PASS=${CONFIG_SERVER_SECURITY_PASS}
      - AUTHORIZATION_JWT_SECRET=${AUTHORIZATION_JWT_SECRET}
      - AUTHENTICATION_USER=${AUTHENTICATION_USER}
      - AUTHENTICATION_PASS=${AUTHENTICATION_PASS}
      - PG_HOST_SERVER=${PG_HOST_SERVER}
      - PG_HOST_SERVER_PORT=${PG_HOST_SERVER_PORT}
      - PG_IMAGE_TAG=${PG_IMAGE_TAG}
      - PG_USER=${PG_USER}
      - PG_PASS=${PG_PASS}
      - PG_DB_NAME=${PG_DB_NAME}
      - PG_USER_ADMIN=${PG_USER_ADMIN}
      - PG_PASS_ADMIN=${PG_PASS_ADMIN}
      - SQL_USER_NAME_1=${SQL_USER_NAME_1}
      - SQL_USER_NAME_2=${SQL_USER_NAME_2}
  api-gateway:
    tty: true
    container_name: api-gateway
    networks:
      - bag-app-net
    build:
      context: .
      dockerfile: Dockerfile-app-api
      args:
        PATH_FILE: api-gateway
    ports:
      - "${API_GATEWAY_PORT}:${API_GATEWAY_PORT}"
    restart: always
    depends_on:
    - config-server
    - eureka-server
    environment:
      - EUREKA_HOST_SERVER=${EUREKA_HOST_SERVER}
      - CONFIG_SERVER_HOST=${CONFIG_SERVER_HOST}
      - API_GATEWAY_PORT=${API_GATEWAY_PORT}
      - EUREKA_SERVER_PORT=${EUREKA_SERVER_PORT}
      - CONFIG_SERVER_PORT=${CONFIG_SERVER_PORT}
      - CONFIG_SERVER_SECURITY_NAME=${CONFIG_SERVER_SECURITY_NAME}
      - CONFIG_SERVER_SECURITY_PASS=${CONFIG_SERVER_SECURITY_PASS}
      - AUTHORIZATION_JWT_SECRET=${AUTHORIZATION_JWT_SECRET}
      - AUTHENTICATION_USER=${AUTHENTICATION_USER}
      - AUTHENTICATION_PASS=${AUTHENTICATION_PASS}
      - PG_HOST_SERVER=${PG_HOST_SERVER}
      - PG_HOST_SERVER_PORT=${PG_HOST_SERVER_PORT}
      - PG_IMAGE_TAG=${PG_IMAGE_TAG}
      - PG_USER=${PG_USER}
      - PG_PASS=${PG_PASS}
      - PG_DB_NAME=${PG_DB_NAME}
      - PG_USER_ADMIN=${PG_USER_ADMIN}
      - PG_PASS_ADMIN=${PG_PASS_ADMIN}
      - SQL_USER_NAME_1=${SQL_USER_NAME_1}
      - SQL_USER_NAME_2=${SQL_USER_NAME_2}
  authentication:
    tty: true
    container_name: authentication
    networks:
      - bag-app-net
    build:
      context: .
      dockerfile: Dockerfile-app-api
      args:
        PATH_FILE: authentication
    restart: always
    depends_on:
    - config-server
    - eureka-server
    - api-gateway
    environment:
      - EUREKA_HOST_SERVER=${EUREKA_HOST_SERVER}
      - CONFIG_SERVER_HOST=${CONFIG_SERVER_HOST}
      - API_GATEWAY_PORT=${API_GATEWAY_PORT}
      - EUREKA_SERVER_PORT=${EUREKA_SERVER_PORT}
      - CONFIG_SERVER_PORT=${CONFIG_SERVER_PORT}
      - CONFIG_SERVER_SECURITY_NAME=${CONFIG_SERVER_SECURITY_NAME}
      - CONFIG_SERVER_SECURITY_PASS=${CONFIG_SERVER_SECURITY_PASS}
      - AUTHORIZATION_JWT_SECRET=${AUTHORIZATION_JWT_SECRET}
      - AUTHENTICATION_USER=${AUTHENTICATION_USER}
      - AUTHENTICATION_PASS=${AUTHENTICATION_PASS}
      - PG_HOST_SERVER=${PG_HOST_SERVER}
      - PG_HOST_SERVER_PORT=${PG_HOST_SERVER_PORT}
      - PG_IMAGE_TAG=${PG_IMAGE_TAG}
      - PG_USER=${PG_USER}
      - PG_PASS=${PG_PASS}
      - PG_DB_NAME=${PG_DB_NAME}
      - PG_USER_ADMIN=${PG_USER_ADMIN}
      - PG_PASS_ADMIN=${PG_PASS_ADMIN}
      - SQL_USER_NAME_1=${SQL_USER_NAME_1}
      - SQL_USER_NAME_2=${SQL_USER_NAME_2}
  users:
    tty: true
    container_name: users
    networks:
      - bag-app-net
    build:
      context: .
      dockerfile: Dockerfile-app-api
      args:
        PATH_FILE: users
    restart: always
    depends_on:
    - config-server
    - eureka-server
    - api-gateway
    environment:
      - EUREKA_HOST_SERVER=${EUREKA_HOST_SERVER}
      - CONFIG_SERVER_HOST=${CONFIG_SERVER_HOST}
      - API_GATEWAY_PORT=${API_GATEWAY_PORT}
      - EUREKA_SERVER_PORT=${EUREKA_SERVER_PORT}
      - CONFIG_SERVER_PORT=${CONFIG_SERVER_PORT}
      - CONFIG_SERVER_SECURITY_NAME=${CONFIG_SERVER_SECURITY_NAME}
      - CONFIG_SERVER_SECURITY_PASS=${CONFIG_SERVER_SECURITY_PASS}
      - AUTHORIZATION_JWT_SECRET=${AUTHORIZATION_JWT_SECRET}
      - AUTHENTICATION_USER=${AUTHENTICATION_USER}
      - AUTHENTICATION_PASS=${AUTHENTICATION_PASS}
      - PG_HOST_SERVER=${PG_HOST_SERVER}
      - PG_HOST_SERVER_PORT=${PG_HOST_SERVER_PORT}
      - PG_IMAGE_TAG=${PG_IMAGE_TAG}
      - PG_USER=${PG_USER}
      - PG_PASS=${PG_PASS}
      - PG_DB_NAME=${PG_DB_NAME}
      - PG_USER_ADMIN=${PG_USER_ADMIN}
      - PG_PASS_ADMIN=${PG_PASS_ADMIN}
      - SQL_USER_NAME_1=${SQL_USER_NAME_1}
      - SQL_USER_NAME_2=${SQL_USER_NAME_2}

  pg-db-server:
    container_name: pg-db-server
    image: "postgres:${PG_IMAGE_TAG}"
    restart: always
    networks:
      - bag-app-net
    environment:
      - POSTGRES_USER=${PG_USER}
      - POSTGRES_PASSWORD=${PG_PASS}
      - POSTGRES_DB=${PG_DB_NAME}
    ports:
      - "${PG_HOST_SERVER_PORT_EXT}:5432"
    volumes:
      - bag_app_postgres:/var/lib/postgresql/data
      - .resources/db/create_database.sql:/docker-entrypoint-initdb.d/create_database.sql
  pg-db-server-admin:
    image: dpage/pgadmin4:latest
    container_name: pg-db-server-admin
    restart: always
    networks:
      - bag-app-net
    depends_on:
      - pg-db-server
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PG_USER_ADMIN}
      PGADMIN_DEFAULT_PASSWORD: ${PG_PASS_ADMIN} 
    ports:
      - "${PG_ADMIN_HOST_SERVER_PORT}:80"
    volumes:
      - bag_app_pgadmin:/var/lib/pgadmin