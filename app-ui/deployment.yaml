---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: app-ui-server
  namespace: $NAMESPACE
  labels:
    app: app-ui-server
spec:
  selector:
    matchLabels:
      app: app-ui-server
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: app-ui-server
    spec:
      imagePullSecrets:
        - name: pipeline-docker-registry
      containers:
      - name: app-ui
        #image: ghcr.io/brazona/business-administration-games/app-ui:$TAG
        image:
          valueFrom:
            configMapKeyRef:
              name: configmap-app-ui
              key: image-docker
        ports:
        - containerPort: 80
          protocol: TCP
        env:
        - name: APP_VERSION
          valueFrom:
            configMapKeyRef:
              name: configmap-app-ui
              key: app-version
        - name: APP_ENVIRONMENT
          valueFrom:
            configMapKeyRef:
              name: configmap-app-ui
              key: app-environment
      securityContext:
        runAsUser: 0
      terminationGracePeriodSeconds: 30
---
kind: Service
apiVersion: v1
metadata:
  name: app-ui-service
  namespace: $NAMESPACE
spec:
  selector:
    app: app-ui-server
  type: ClusterIP
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80

---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  namespace: $NAMESPACE
  name: app-ui-ingress
  annotations:
    allow.http: "true"
spec:
  rules:
    - host: $DNS
      http:
        paths:
          - path: /
            backend:
              serviceName: app-ui-service
              servicePort: 80
