name: Run Build Docker and Deploy K8S 
on:
  pull_request:
    branches:
      - 'releases/**'
      - 'develop'
    paths-ignore:
      - '.resources/**'
      - '.github/workflows/run-merge-branch.yml'
  workflow_dispatch:
env:
  BRANCH_TARGET: ${{ github.ref_name }}
  BRANCH_SOURCE: ${{ github.ref_name }} 
  EVENT_TYPE: ${{ github.event_name }} 
  ENVIRONMENT_APP: ${{ github.event_name }}
  REGISTRY_DOCKER: ghcr.io
  REPOSITORY_DOCKER: ${{ github.repository }}
  VERSION_TYPE: ''
  PR_NUMBER: ${{ github.event.number }}
  
jobs:
  info-environment:
    name: Identifying the Environment
    runs-on: ubuntu-latest
    outputs:
      environment_name: ${{ steps.name.outputs.environment_name }}
      branch_source: ${{ steps.branch_source.outputs.branch_source }}
      branch_target: ${{ steps.branch_target.outputs.branch_target }}
      tag: ${{ steps.tag.outputs.tag }}
    steps:
      - name: Verify type Event Branch Target
        if: contains(env.EVENT_TYPE, 'pull_request')
        run: echo "BRANCH_TARGET=${{ github.base_ref }} " >> $GITHUB_ENV
      - name: Verify type Event Branch Source
        if: contains(env.EVENT_TYPE, 'pull_request')
        run: echo "BRANCH_SOURCE=${{ github.head_ref }} " >> $GITHUB_ENV
      - name: Environment Production
        if: contains(env.BRANCH_TARGET, 'main') && contains(env.EVENT_TYPE, 'push')
        run: |
          echo "ENVIRONMENT_APP=production" >> $GITHUB_ENV 

      - name: Environment Staging
        if: contains(env.BRANCH_TARGET, 'main') && contains(env.EVENT_TYPE, 'pull_request')
        run: | 
          echo "ENVIRONMENT_APP=staging" >> $GITHUB_ENV &&
          echo "VERSION_TYPE=RELEASE" >> $GITHUB_ENV

      - name: Environment Homologation
        if: startsWith(env.BRANCH_TARGET, 'release')
        run: |
          echo "ENVIRONMENT_APP=homologation" >> $GITHUB_ENV &&
          echo "VERSION_TYPE=RELEASE" >> $GITHUB_ENV

      - name: Environment Development
        if: contains(env.BRANCH_TARGET, 'develop')
        run: |
          echo "ENVIRONMENT_APP=development" >> $GITHUB_ENV &&
          echo "VERSION_TYPE=SNAPSHOT" >> $GITHUB_ENV

      - name: Defined Environment
        id: name
        run: echo "environment_name=${{ env.ENVIRONMENT_APP }}" >> $GITHUB_OUTPUT
      - name: Defined Branch Target
        id: branch_target
        run: echo "branch_target=${{ env.BRANCH_TARGET }}" >> $GITHUB_OUTPUT
      - name: Defined Branch Source
        id: branch_source
        run: echo "branch_source=${{ env.BRANCH_SOURCE }}" >> $GITHUB_OUTPUT
      - name: Defined Tag Docker
        id: tag
        run: echo "tag=${{github.run_number}}-$VERSION_TYPE" >> $GITHUB_OUTPUT
  compile:
    name: Run Maven Project
    runs-on: ubuntu-latest
    permissions: write-all
    needs: [info-environment]
    environment:
      name: ${{needs.info-environment.outputs.environment_name}}
    steps:
      - name: Cache Maven packages
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: '11'
      - name: Build with Maven
        run: mvn clean install test
  build:
    name: Build and Push Docker image 
    needs: [info-environment, compile]
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 2
      matrix:
        include:
          - application: "app-ui"
    permissions: write-all
    environment:
      name: ${{needs.info-environment.outputs.environment_name}}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ${{ env.REGISTRY_DOCKER }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Docker Image
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
        env:
          APP: ${{ matrix.application }}
          TAG_IMAGE: ${{needs.info-environment.outputs.tag}}
        with:
          context: ./${{ env.APP }}
          push: true
          tags: ${{ env.REGISTRY_DOCKER }}/${{ github.repository }}/${{ env.APP }}:${{env.TAG_IMAGE}}
      
      - name: Set Kubernetes Context
        uses: azure/k8s-set-context@v1
        with:
          method: kubeconfig
          kubeconfig: ${{ secrets.KUBE_CONFIG }}

      - name: Deploy to Cluster
        env:
          APP: ${{ matrix.application }}
          TAG_IMAGE: ${{needs.info-environment.outputs.tag}}
          NAMESPACE: ${{needs.info-environment.outputs.environment_name}}
          DNS: ${{ vars.DNS }}
        run: | 
          manifest=`cat "./${{ env.APP }}/deployment.yaml" | sed 's/$NAMESPACE/${{ env.NAMESPACE }}/ ; s/$DNS/${{ env.DNS }}/ ; s/$TAG/${{ env.TAG_IMAGE}}/ ; s/$APP_VERSION/${{ env.TAG_IMAGE}}/ ; s/$APP_ENVIRONMENT/${{ env.NAMESPACE}}/' ./${{ env.APP}}/deployment.yaml`
          echo "$manifest" | kubectl apply -f -
  


